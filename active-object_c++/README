==================================
A Linux Active Object, although  pretty easy to replace pthreads version for Windows
similar API. Either way if you need the Windows version then drop me a line at 
Hedstrom at KjellKod dot cc.

The code example here is an Active Object that utilizes a silly (non standard conforming) lock-free circular fifo. 
Ref: http://www.codeproject.com/KB/threads/LockFree.aspx

It's all tested with google test, which I provide under ../3rdParty
Please note that I've also a newer version of this active object, active-object_c++11
Ref: www.kjellkod.cc/kjellkod-code
==================================





CONTENT
===========
lock_free/src/circularfifo
*) A circular queue/buffer static size (compile time) that works on x86/x64 architectures (at least) 
   was originally published at www.kjellkod.cc/threadsafecircularqueue  
*) Google Tests (gtest): 3 purposes 
                        a) intro to gtest  
                        b) intro to pthreads (since I was rusty) 
                        c) some "silly" transactional testing on the queue to "verify it"
active_object/src/active.h
active_object/src/active.cpp
*) An active object (class that encapsules a thread) using pthreads, 
   adding work to the thread is done through safely by adding jobs to a work queue

active_object/src/callback.h
*) callback: A way to objectify callbacks for easy storage in a work queue. 
   I was first introduced by this concept by Herb Sutter who showed it for C++0x.
    This implementation does the same but for previous C++ versions 
    (See Herbs article:    http://herbsutter.com/2010/07/12/effective-concurrency-prefer-using-active-objects-instead-of-naked-threads/)


Howto Run it
============
1. Install CMake
3. cd lock_free
   mkdir build
   cd build
   cmake ..
   make
   ./testCircularFifo
